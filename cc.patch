diff --git a/front-end/requirements.txt b/front-end/requirements.txt
index ede2c67..b0c15c6 100644
--- a/front-end/requirements.txt
+++ b/front-end/requirements.txt
@@ -1,4 +1,5 @@
 Jinja2
 Flask>=1.0
 requests==2.19.1
-flask_cors
\ No newline at end of file
+flask_cors
+gunicorn
\ No newline at end of file
diff --git a/front-end/run.py b/front-end/run.py
index de11686..3944ae9 100644
--- a/front-end/run.py
+++ b/front-end/run.py
@@ -43,9 +43,9 @@ def show_vid(bucket_name):
     listobj = []
     for obj in objects:
         if obj['name'].split(".")[-1].lower() in ("mp4", "mov", "avi"):
-            listobj.append((obj['name'], bucket_name, f"{CONTROLLER_HOST}/makegif"))
+            listobj.append((obj['name'], bucket_name, f"{CONTROLLER_URL}/makegif"))
     
-    return render_template("show.html", host=request.host, buckets=buckets, display=bucket_name+"/display", bucketname=bucket_name, listrender=listobj, make_all=f"{CONTROLLER_HOST}/makegif")
+    return render_template("show.html", host=request.host, buckets=buckets, display=bucket_name+"/display", bucketname=bucket_name, listrender=listobj, make_all=f"{CONTROLLER_URL}/makegif")
 
 # @app.context_processor
 # def example():
diff --git a/p_0/backend/Utils/bucket_utils.py b/p_0/backend/Utils/bucket_utils.py
index 3eb2836..b610b04 100644
--- a/p_0/backend/Utils/bucket_utils.py
+++ b/p_0/backend/Utils/bucket_utils.py
@@ -6,7 +6,7 @@ def createBucket(bucketName,mongo):
         #Try to create new bucket with a unique bucket name
         try:
             bucket.insert_one({'_id' : bucketName,'created' : timeStamp,'modified':timeStamp})
-            path = bucketName   
+            path = "sos" + bucketName   
             if not os.path.exists(path):    #create folder if not exist
                 os.makedirs(path)
             return True
diff --git a/p_0/backend/app.py b/p_0/backend/app.py
index 7559957..6bc239f 100644
--- a/p_0/backend/app.py
+++ b/p_0/backend/app.py
@@ -140,7 +140,7 @@ def object_GET_handler(bucketName,objectName):
         dl = prepare_download(bucketName,objectName,Range[0],Range[1],mongo)
         # return str(validate_download_range(Range[0],Range[1],39))
         if dl:
-            path = bucketName + "/" + objectName + "/"
+            path = "sos" + bucketName + "/" + objectName + "/"
             rv = Response(object_generator(path,dl[0],dl[1],dl[2][0],dl[3][0],dl[2][1],dl[3][1]),200,direct_passthrough=True)
             rv.headers["eTag"] = get_eTag(bucketName,objectName,mongo)
             rv.headers["Content-Type"] = metadata_get(bucketName, objectName, "Content-Type", mongo)
